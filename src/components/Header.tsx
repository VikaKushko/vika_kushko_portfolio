import { useState, useRef, useEffect } from "react";
import { useTranslation } from "react-i18next";
import "../styles/header.css";

function Header({ theme, setTheme }: { theme: string; setTheme: (t: string) => void }) {
    const [open, setOpen] = useState(false);
    const [langOpen, setLangOpen] = useState(false); // —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —è–∑—ã–∫–æ–≤–æ–≥–æ –º–µ–Ω—é
    const { t, i18n } = useTranslation();
    const langRef = useRef<HTMLDivElement>(null);

    const toggleLanguageMenu = () => {
        setLangOpen(!langOpen);
    };

    const changeLanguage = (lng: string) => {
        i18n.changeLanguage(lng);
        setLangOpen(false); // –∑–∞–∫—Ä—ã–≤–∞–µ–º –ø–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞
    };

    const languageNames: { [key: string]: string } = {
        en: "English",
        ru: "–†—É—Å—Å–∫–∏–π",
        uk: "–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞"
    };

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –º–µ–Ω—é
    useEffect(() => {
        const handleClickOutside = (event: MouseEvent) => {
            if (langRef.current && !langRef.current.contains(event.target as Node)) {
                setLangOpen(false);
            }
        };
        document.addEventListener("mousedown", handleClickOutside);
        return () => {
            document.removeEventListener("mousedown", handleClickOutside);
        };
    }, []);

    return (
        <header className="header">
            <button className="burger" onClick={() => setOpen(!open)}>‚ò∞</button>

            <nav className={open ? "open" : ""}>
                <a href="#home" onClick={() => setOpen(false)}>{t("home")}</a>
                <a href="#about" onClick={() => setOpen(false)}>{t("about")}</a>
                <a href="#portfolio" onClick={() => setOpen(false)}>{t("portfolio")}</a>
            </nav>


            {/* –ö–Ω–æ–ø–∫–∞ —Å–º–µ–Ω—ã —Ç–µ–º—ã */}
            <button
                className='theme-toggle'
                onClick={() => setTheme(theme === "dark" ? "light" : "dark")}
            >
                {theme === "dark" ? "‚òÄÔ∏è" : "üåô"}
            </button>

            {/* –í—ã–ø–∞–¥–∞—é—â–∏–π –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å —è–∑—ã–∫–æ–≤ */}
            <div className="lang-switch" ref={langRef}>
                <button className="lang-btn" onClick={toggleLanguageMenu}>
                    {languageNames[i18n.language]} ‚ñæ
                </button>
                {langOpen && (
                    <ul className="lang-dropdown">
                        <li onClick={() => changeLanguage("en")}>English</li>
                        <li onClick={() => changeLanguage("ru")}>–†—É—Å—Å–∫–∏–π</li>
                        <li onClick={() => changeLanguage("uk")}>–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞</li>
                    </ul>
                )}
            </div>

        </header>
    );
}

export default Header;
